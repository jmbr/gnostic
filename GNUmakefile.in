###############################################################################
#
# @configure_input@
#
###############################################################################

@SET_MAKE@

SHELL := @SHELL@

srcdir := @srcdir@
prefix := @prefix@
exec_prefix := @exec_prefix@

bindir := @bindir@
libdir := @libdir@
mandir := @mandir@
datadir := @datadir@
top_builddir := .

docdir := @srcdir@/doc
testdatadir := @srcdir@/testdata


VPATH := $(srcdir):$(srcdir)/missing

SHTOOL := $(srcdir)/shtool

INSTALL := $(SHTOOL) install -c
INSTALL_PROGRAM := $(INSTALL)
INSTALL_DATA := $(INSTALL) -m 644

CC := @CC@
LEX := @LEX@
YACC := @YACC@

CPPFLAGS := @CPPFLAGS@
DEFS := @DEFS@
CFLAGS := @CFLAGS@
LDFLAGS := @LDFLAGS@
LIBS := @LIBS@
INCLUDES := @INCLUDES@


LIBOBJS := @LIBOBJS@
ifdef LIBOBJS
INCLUDES += -I$(srcdir)/missing
endif

COMPILE = $(CC) $(CPPFLAGS) $(CFLAGS) $(DEFS) $(INCLUDES)
LINK = $(CC)  $(CFLAGS) $(LDFLAGS)

PACKAGE := @PACKAGE@
VERSION := @VERSION@

versionfile := $(srcdir)/version.h


###############################################################################
#
# Pattern rules.
#
###############################################################################

.SUFFIXES: .c .o

%.o: %.c
	$(COMPILE) -c $<

%: %.o
	$(LINK) $^ -o $@ $(LIBS)


###############################################################################
#
# Build rules.
#
###############################################################################

SOURCES := \
	ast.c \
	ast-itor.c \
	env.c \
	gnostic.c \
	grammar.c \
	hashtab.c \
	logger.c \
	scanner.c \
	stack.c \
	task.c \
	task-exec.c \
	tasklist.c \
	taskset.c \
	taskset-parser.c \
	vars.c \
	xmemory.c

OBJECTS := $(SOURCES:%.c=%.o) $(LIBOBJS)

.PHONY:
.PHONY: all

all: gnostic
	
gnostic: $(OBJECTS)

scanner.c: scanner.l grammar.c

grammar.c: grammar.y
	$(YACC) -d $<
	mv y.tab.c $@
	if test -f y.tab.h; then \
	  if cmp -s y.tab.h $*.h; then \
	    rm -f y.tab.h; \
	  else \
	    mv y.tab.h $*.h; \
	  fi; \
	fi


###############################################################################
#
# Test suite.
#
###############################################################################

TEST_BINARIES := $(patsubst %.c, %, $(wildcard test-*.c))
TEST_SCRIPTS := $(wildcard test-*.sh)
TESTS := $(sort $(TEST_BINARIES) $(TEST_SCRIPTS))

.PHONY: tests check

tests: $(TEST_BINARIES)

test-ast: \
	ast-itor.o \
	ast.o \
	stack.o \
	test-ast.o \
	xmemory.o

test-grammar: \
	ast-itor.o \
	ast.o \
	grammar.o \
	logger.o \
	scanner.o \
	stack.o \
	tasklist.o \
	task.o \
	test-grammar.o \
	vars.o \
	xmemory.o

test-hashtab: \
	hashtab.o \
	test-hashtab.o \
	xmemory.o

test-stack: \
	stack.o \
	test-stack.o \
	xmemory.o

test-tasklist: \
	ast-itor.o \
	ast.o \
	logger.o \
	stack.o \
	tasklist.o \
	task.o \
	test-tasklist.o \
	xmemory.o

check: gnostic tests
	@echo "===================="
	@echo "Executing test suite"
	@echo "===================="
	@echo ""
	@for test in $(TESTS); do \
	  echo -n "Checking $$test... "; \
	  $(srcdir)/$$test 1>$(testdatadir)/$$test.out 2>&1 ; \
	  RETVAL=$$?; \
	  if [ $$RETVAL -ne 0 ]; then \
	    $(SHTOOL) echo -e "%BFAILED%b"; \
	    echo "This was the output from $$test:"; \
	    echo "========================================================"; \
	    cat $(testdatadir)/$$test.out; \
	    echo "========================================================"; \
            continue; \
	  fi; \
	  if [ -f $(testdatadir)/$$test.exp ]; then \
	    cmp -s $(testdatadir)/$$test.exp $(testdatadir)/$$test.out; \
	    RETVAL=$$?; \
	    if [ $$RETVAL -ne 0 ]; then \
	      $(SHTOOL) echo -e "%BFAILED%b"; \
	      diff -u $(testdatadir)/$$test.exp $(testdatadir)/$$test.out; \
	      continue; \
	    fi; \
	  fi; \
	  echo "OK"; \
	done

###############################################################################
#
# Documentation.
#
###############################################################################

.PHONY: doc userdoc apidoc

DOXYGEN := @DOXYGEN@

doc: userdoc
	$(MAKE) -C $(docdir)

apidoc: doxy.cfg
	$(DOXYGEN) $(srcdir)/doxy.cfg

doxy.cfg: doxy.cfg.in
	$(SHELL) ./config.status doxy.cfg


###############################################################################
#
# Cleanup.
#
###############################################################################

.PHONY: clean clobber rmbak

clean:
	$(RM) gnostic *.o
	$(RM) *.core core.*
	$(RM) $(TEST_BINARIES)
	$(RM) $(testdatadir)/*.out
	$(MAKE) -C $(docdir) clean

rmbak:
	$(RM) *~ *.bak

clobber: rmbak clean
	$(RM) grammar.[ch] scanner.c

distclean: clobber
	$(RM) tags
	$(RM) config.log config.cache config.status
	$(RM) config.h stamp-h
	$(RM) -r $(srcdir)/autom4te.cache
	$(RM) GNUmakefile $(docdir)/GNUmakefile


###############################################################################
#
# Installation, distribution and packaging.
#
###############################################################################

.PHONY: install installdirs install-strip dist rpm

install: all installdirs
	$(INSTALL_PROGRAM) gnostic $(DESTDIR)$(bindir)/
	$(INSTALL_DATA) gnostic.1 $(DESTDIR)$(mandir)/man1/
	$(INSTALL_DATA) gnostic.5 $(DESTDIR)$(mandir)/man5/

installdirs: $(SHTOOL)
	$(SHTOOL) mkdir -f -p $(DESTDIR)$(bindir)
	$(SHTOOL) mkdir -f -p $(DESTDIR)$(mandir)/man1 $(DESTDIR)$(mandir)/man5

install-strip:; $(MAKE) INSTALL_PROGRAM='$(INSTALL_PROGRAM) -s' install

NAME := $(PACKAGE)-$(VERSION)
TARBALL := $(NAME).tar.gz

dist: depend distclean shtool
	$(SHTOOL) fixperm $(srcdir)
	$(SHTOOL) tarball -o $(TARBALL) -c gzip \
	  -e 'CVS,\{arch\},\.arch-ids,_darcs,^\-i,\.swp,^tmp,^TODO' .
	@echo ==============================================
	@echo $(TARBALL) is ready for distribution
	@echo ==============================================

#rpm: dist
#	@cp $(NAME).tar.gz /usr/src/redhat/SOURCES
#	@rpm -ba gnostic.spec
#	@cp /usr/src/redhat/RPMS/i386/$(NAME)*.rpm .


###############################################################################
#
# Automagick remaking of configuration files.
#
###############################################################################

configure: configure.ac
	cd $(srcdir) && autoconf && autoheader

config.status: configure configure.ac
	$(SHELL) ./config.status --recheck

config.h: stamp-h

stamp-h: config.h.in config.status
	$(SHELL) ./config.status config.h
	@echo timestamp > stamp-h

#gnostic.spec: gnostic.spec.in
#	$(SHELL) ./config.status gnostic.spec

GNUmakefile: GNUmakefile.in config.status
	$(SHELL) ./config.status GNUmakefile

setversion: shtool
	@version=`$(SHTOOL) version -l python $(versionfile)`; \
	$(SHTOOL) version -l c -n gnostic -s $$version $(versionfile)

incversion: shtool
	$(SHTOOL) version -l c -n gnostic -i l $(versionfile)

shtool:
	shtoolize -o $@ version fixperm tarball mkdir install echo

version.h:
	$(SHTOOL) version --language=c --name=$(PACKAGE) --set $(VERSION) $@


###############################################################################
#
# Dependency tracking.
#
###############################################################################

.PHONY: depend

include deps.mk

depend:
	@echo =====================
	@echo Tracking dependencies
	@echo =====================
	$(CC) -MM -I. $(CPPFLAGS) $(CFLAGS) $(DEFS) $(INCLUDES) *.c > deps.mk


###############################################################################
#
# Misc.
#
###############################################################################

.PHONY: loc-count

ALL_SOURCES := $(filter-out grammar.c grammar.h scanner.c, $(wildcard *.[chly]))

TAGS: tags;
tags: $(ALL_SOURCES)
	ctags $^

loc-count: $(ALL_SOURCES)
	@c_loc=$$(c_count $(filter %.c %.h, $^) | tail -1); \
	lex_loc=$$(lex_count $(filter %.l %.y, $^) | tail -1); \
	echo `expr $$c_loc + $$lex_loc` lines of code.
